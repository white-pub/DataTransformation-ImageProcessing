Downloaded python from their website, installed it.
    used the standard installation “Install Now” and checked the boxes for “Add Python to PATH…”, and “Install as administrator…”

Went to cmd:
    pip install virtualenv

Decided to set up my project with GitHub.
=>Created a New Repository on GitHub
=>Clone the Repository Using GitHub Desktop
        stored the project on my local machine under C:\Users\...\class name

=>Navigated to the directory where my repository was clone
        cd path_name
=>Create a Virtual Environment named venv
        python -m venv venv
=>Activate the virtual environment (on Windows)
        venv\Scripts\activate
        see the (venv) in cmd

=>Install Dependencies
        pip install jupyterlab
=>Save the installed packages to a requirements.txt file
        pip freeze > requirements.txt
        🐦It's a good practice for future reference! 
        Also easy: After installing the packages, generate the requirements.txt file by running "pip freeze > requirements.txt"
        🦄How to use this file in the future to set up the same environment (by chatGPT)
        1. Clone the Project:
        Clone the repository from GitHub (as you did earlier).
        2. Create and Activate a Virtual Environment:
        Create and activate a virtual environment in the project directory.
        3.Install the Dependencies:
        Use the requirements.txt file to install all the necessary packages:
        ----
        pip install -r requirements.txt
        ----
        This command installs all the packages listed in the requirements.txt file with the specified versions.

=>Make Initial Commit:
    back to GitHub Desktop, check the changes made (e.g., the virtual environment folder, requirements.txt, etc.).
    Add a commit message like "Initial commit with project setup".
    🐦Click Commit to main.
=>Push the Changes to GitHub:
    After committing changes, 🐦click on "Push origin" in the top toolbar of GitHub Desktop to upload changes to GitHub.


!!! Generally not advisable to share the env folder
=>In project directory, create a file named .gitignore.
        🦄On windows, can stay in virtual environment and type
        echo. > .gitignore
=>Open the .gitignore file in any text editor (e.g., Notepad, VS Code) and add the paths or patterns you want to ignore.
        In this case, just add 
        venv/
        inside the file (or whatever_vertual_envirment_name/ )
        save the file, commit to git, push to origin

🦄If the venv/ directory was previously tracked by Git (appeared in GitHub Desktop before), need to remove it from tracking manually:
    (can stay in virtual environment) Type the following line to Clear Cached Files
    git rm -r --cached venv/
    Then commit this change, and it should no longer appear. (can verify from github webpage)

🐦🐦🐦The virtual environment doesn't interfere with file operations like creating or editing files, so you can manage your project files without deactivating it.


🦄to deactivate the virtual environment, just type in
        ----
        deactivate
        ----

🍧🍧🍧🍧🍧🍧🍧
Because Jupyter Lab is installed in the venv, first be in the venv - should be a (venv) in start of line in cmd

=> Open the Jupyter Lab environment.
        Execute the command “jupyter-lab” in cmd (in venv). 
                Should open up a browser window with the Jupyter Lab interface.
=> Creating a New Notebook
        Click on the + button in the file browser panel or the File menu at the top and selecting New > Notebook.
        Choose the Python kernel (e.g., Python 3) for your new notebook.
=>  Install data science python libraries as needed. For this class, we need the following to start. Do one line at a time to avoid error.
        ----
        pip install pandas
        pip install scikit-learn
        ----
        Might take a few minute each to install.
        🦄 If the [] befor the cell is [*], it means its still executing.

